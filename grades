grades <- data.frame(
 Assignment_Type = c("Homework", "Homework", "Homework", "Homework", "Quiz",
"Quiz", "Exam", "Project"),
 Assignment_Name = c("HW #1", "HW #2", "HW #4", "HW #8", "Quiz #1", "Quiz
#6", "Midterm Exam Part 1", "DAP II"),
 Grade_Percentage = c(0, 0, 95, 95, 100, 100, 64, 0),
 Due_Date = as.Date(c("2024-08-31", "2024-09-12", "2024-09-28", "2024-10-
19", "2024-09-01", "2024-10-16", "2024-10-18", "2024-10-05")),
 Submitted_On = as.Date(c("2024-09-27", "2024-10-12", "2024-10-12", "2024-
11-02", NA, NA, NA, "2024-11-08")),
 Late = c("Yes", "Yes", "Yes", "Yes", "No", "No", "No", "Yes"),
 Category_Weight = c(3, 10, 15, 5, 5, 5, 10, 20)
)
names(grades)
## [1] "Assignment_Type" "Assignment_Name" "Grade_Percentage" "Due_Date"
## [5] "Submitted_On" "Late" "Category_Weight"
print(grades)
## Assignment_Type Assignment_Name Grade_Percentage Due_Date
Submitted_On
## 1 Homework HW #1 0 2024-08-31 2024-
09-27
## 2 Homework HW #2 0 2024-09-12 2024-
10-12
## 3 Homework HW #4 95 2024-09-28 2024-
10-12
## 4 Homework HW #8 95 2024-10-19 2024-
11-02
## 5 Quiz Quiz #1 100 2024-09-01
<NA>
## 6 Quiz Quiz #6 100 2024-10-16
<NA>
## 7 Exam Midterm Exam Part 1 64 2024-10-18
<NA>
## 8 Project DAP II 0 2024-10-05 2024-
11-08
## Late Category_Weight
## 1 Yes 3
## 2 Yes 10
## 3 Yes 15
## 4 Yes 5
## 5 No 5
## 6 No 5
## 7 No 10
## 8 Yes 20

summary(grades)
## Assignment_Type Assignment_Name Grade_Percentage Due_Date
## Length:8 Length:8 Min. : 0.00 Min. :2024-08-31
## Class :character Class :character 1st Qu.: 0.00 1st Qu.:2024-09-09
## Mode :character Mode :character Median : 79.50 Median :2024-10-01
## Mean : 56.75 Mean :2024-09-27
## 3rd Qu.: 96.25 3rd Qu.:2024-10-16
## Max. :100.00 Max. :2024-10-19
##
## Submitted_On Late Category_Weight
## Min. :2024-09-27 Length:8 Min. : 3.000
## 1st Qu.:2024-10-12 Class :character 1st Qu.: 5.000
## Median :2024-10-12 Mode :character Median : 7.500
## Mean :2024-10-18 Mean : 9.125
## 3rd Qu.:2024-11-02 3rd Qu.:11.250
## Max. :2024-11-08 Max. :20.000
## NA's :3

grades <- grades %>%
 mutate(Weighted_Score = Grade_Percentage * Category_Weight / 100)
total_score <- sum(grades$Weighted_Score, na.rm = TRUE)
total_weight <- sum(grades$Category_Weight)
final_grade <- total_score / total_weight * 100
cat("Current Total Grade:", round(final_grade, 2), "%\n")

## Current Total Grade: 48.49 % 

grades <- grades %>%
 mutate(Outcome = ifelse(Grade_Percentage > 0, 1, 0))
log_model <- glm(Outcome ~ Category_Weight + Late, data = grades, family =
binomial)
grades$Predicted_Probability <- predict(log_model, type = "response")
grades$Late <- as.factor(grades$Late)
ggplot(grades, aes(x = Category_Weight, y = Predicted_Probability, color =
Late)) +
 geom_point(size = 3) +
 geom_smooth(method = "lm", se = FALSE, color = "blue") +
 labs(title = "Predicted Probability of Accepted Assignments",
 x = "Assignment Weight (%)",
 y = "Predicted Probability") +
 theme_minimal() +
 theme(
 plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
 axis.text = element_text(size = 12),
 axis.title = element_text(size = 14)
 )
## `geom_smooth()` using formula = 'y ~ x'

ggplot(grades, aes(x = Assignment_Type, y = Grade_Percentage, fill = Late)) +
 geom_bar(stat = "summary", fun = "mean", position = "dodge") +
 labs(title = "Average Grade by Assignment Type",
 x = "Assignment Type", y = "Average Grade (%)") +
 theme_minimal()

ggplot(grades, aes(x = Due_Date, y = Grade_Percentage)) +
 geom_point(aes(color = Late), size = 3) +
 geom_line(aes(group = 1), color = "blue", linetype = "dashed") +
 labs(title = "Submission Trends: Due Date vs Grade",
 x = "Due Date", y = "Grade (%)") +
 theme_minimal()

grades <- grades %>%
 mutate(Predicted_Grade = ifelse(Late == "Yes" & Grade_Percentage == 0, 80,
Grade_Percentage)) %>%
 mutate(Predicted_Weighted_Score = Predicted_Grade * Category_Weight / 100)
predicted_score <- sum(grades$Predicted_Weighted_Score, na.rm = TRUE)
predicted_final_grade <- predicted_score / total_weight * 100
cat("Predicted Total Grade (if late submissions were 80%):",
round(predicted_final_grade, 2), "%\n")
## Predicted Total Grade (if late submissions were 80%): 84.66 %

accepted_grades <- grades %>% filter(Grade_Percentage > 0)
accepted_summary <- accepted_grades %>%

 summarise(
 Average_Grade = mean(Grade_Percentage),
 Median_Grade = median(Grade_Percentage),
 Total_Assignments = n(),
 Max_Grade = max(Grade_Percentage),
 Min_Grade = min(Grade_Percentage)
 )
print(accepted_summary)
## Average_Grade Median_Grade Total_Assignments Max_Grade Min_Grade
## 1 90.8 95 5 100 64

ggplot(accepted_grades, aes(x = Due_Date, y = Grade_Percentage)) +
 geom_point(size = 3, color = "darkgreen") +
 geom_line(aes(group = 1), color = "blue", size = 1) +
 labs(title = "Performance on Accepted Assignments",
 x = "Due Date", y = "Grade (%)") +
 theme_minimal() +
 theme(
 plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
 axis.text = element_text(size = 12),
 axis.title = element_text(size = 14)
 )
## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.
## â„¹ Please use `linewidth` instead.
## This warning is displayed once every 8 hours.
## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was
## generated.

